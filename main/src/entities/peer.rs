//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.11

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "peer")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub ip_addr: i32,
    pub port: i16,
    pub swarm: i32,
    pub last_announced: i64,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::swarm::Entity",
        from = "Column::Swarm",
        to = "super::swarm::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    Swarm,
}

impl Related<super::swarm::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Swarm.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
